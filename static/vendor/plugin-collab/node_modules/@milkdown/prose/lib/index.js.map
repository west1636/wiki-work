{"version":3,"file":"index.js","sources":["../src/toolkit/browser.ts","../src/toolkit/input-rules/custom-input-rules.ts","../src/toolkit/input-rules/mark-rule.ts","../src/toolkit/input-rules/node-rule.ts","../src/toolkit/position/index.ts","../src/toolkit/prose/helper.ts","../src/toolkit/prose/node.ts","../src/toolkit/prose/schema.ts","../src/toolkit/prose/selection.ts"],"sourcesContent":["/* Copyright 2021, Milkdown by Mirone. */\n\n/**\n * Copy paste from:\n * https://github.com/ProseMirror/prosemirror-view/blob/master/src/browser.ts\n */\n\nconst nav = typeof navigator != 'undefined' ? navigator : null\nconst doc = typeof document != 'undefined' ? document : null\nconst agent = (nav && nav.userAgent) || ''\n\nconst ie_edge = /Edge\\/(\\d+)/.exec(agent)\nconst ie_upto10 = /MSIE \\d/.exec(agent)\nconst ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(agent)\n\nexport const ie = !!(ie_upto10 || ie_11up || ie_edge)\nexport const ie_version = ie_upto10\n  ? (document as typeof document & { documentMode: unknown }).documentMode\n  : ie_11up\n    ? +ie_11up[1]!\n    : ie_edge\n      ? +ie_edge[1]!\n      : 0\nexport const gecko = !ie && /gecko\\/(\\d+)/i.test(agent)\nexport const gecko_version = gecko && +(/Firefox\\/(\\d+)/.exec(agent) || [0, 0])[1]\n\nconst _chrome = !ie && /Chrome\\/(\\d+)/.exec(agent)\nexport const chrome = !!_chrome\nexport const chrome_version = _chrome ? +_chrome[1]! : 0\nexport const safari = !ie && !!nav && /Apple Computer/.test(nav.vendor)\n// Is true for both iOS and iPadOS for convenience\nexport const ios = safari && (/Mobile\\/\\w+/.test(agent) || (!!nav && nav.maxTouchPoints > 2))\nexport const mac = ios || (nav ? /Mac/.test(nav.platform) : false)\nexport const android = /Android \\d/.test(agent)\nexport const webkit = !!doc && 'webkitFontSmoothing' in doc.documentElement.style\nexport const webkit_version = webkit ? +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport type { InputRule } from '../../inputrules'\nimport type { EditorState, TextSelection, Transaction } from '../../state'\nimport { Plugin, PluginKey } from '../../state'\nimport type { EditorView } from '../../view'\n\nfunction run(view: EditorView, from: number, to: number, text: string, rules: InputRule[], plugin: Plugin) {\n  if (view.composing)\n    return false\n  const state = view.state\n  const $from = state.doc.resolve(from)\n  if ($from.parent.type.spec.code)\n    return false\n  const textBefore\n        = $from.parent.textBetween(Math.max(0, $from.parentOffset - 500), $from.parentOffset, undefined, '\\uFFFC') + text\n  for (let i = 0; i < rules.length; i++) {\n    const match = (rules[i] as { match: RegExp }).match.exec(textBefore)\n    const tr\n            = match\n            && match[0]\n            && (\n              rules[i] as { handler: (state: EditorState, match: string[], from: number, to: number) => Transaction }\n            ).handler(state, match, from - (match[0].length - text.length), to)\n    if (!tr)\n      continue\n    view.dispatch(tr.setMeta(plugin, { transform: tr, from, to, text }))\n    return true\n  }\n  return false\n}\n\nexport const customInputRulesKey = new PluginKey('MILKDOWN_CUSTOM_INPUTRULES')\nexport function customInputRules({ rules }: { rules: InputRule[] }): Plugin {\n  const plugin: Plugin = new Plugin({\n    key: customInputRulesKey,\n    isInputRules: true,\n\n    state: {\n      init() {\n        return null\n      },\n      apply(this: typeof plugin, tr, prev) {\n        const stored = tr.getMeta(this)\n        if (stored)\n          return stored\n        return (tr.selectionSet || tr.docChanged) ? null : prev\n      },\n    },\n    props: {\n      handleTextInput(view, from, to, text) {\n        return run(view, from, to, text, rules, plugin)\n      },\n      handleDOMEvents: {\n        compositionend: (view) => {\n          setTimeout(() => {\n            const { $cursor } = view.state.selection as TextSelection\n            if ($cursor)\n              run(view, $cursor.pos, $cursor.pos, '', rules, plugin)\n          })\n          return false\n        },\n      },\n      handleKeyDown(view, event) {\n        if (event.key !== 'Enter')\n          return false\n        const { $cursor } = view.state.selection as TextSelection\n        if ($cursor)\n          return run(view, $cursor.pos, $cursor.pos, '\\n', rules, plugin)\n        return false\n      },\n    },\n  })\n  return plugin\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { InputRule } from '../../inputrules'\nimport type { Mark, MarkType } from '../../model'\nimport type { Captured, Options } from './common'\n\n/// Create an input rule for a mark.\nexport function markRule(regexp: RegExp, markType: MarkType, options: Options = {}): InputRule {\n  return new InputRule(regexp, (state, match, start, end) => {\n    const { tr } = state\n    const matchLength = match.length\n\n    let group = match[matchLength - 1]\n    let fullMatch = match[0]\n    let initialStoredMarks: readonly Mark[] = []\n\n    let markEnd = end\n\n    const captured: Captured = {\n      group,\n      fullMatch,\n      start,\n      end,\n    }\n\n    const result = options.updateCaptured?.(captured)\n    Object.assign(captured, result);\n\n    ({ group, fullMatch, start, end } = captured)\n\n    if (fullMatch === null)\n      return null\n\n    if (group?.trim() === '')\n      return null\n\n    if (group) {\n      const startSpaces = fullMatch.search(/\\S/)\n      const textStart = start + fullMatch.indexOf(group)\n      const textEnd = textStart + group.length\n\n      initialStoredMarks = tr.storedMarks ?? []\n\n      if (textEnd < end)\n        tr.delete(textEnd, end)\n\n      if (textStart > start)\n        tr.delete(start + startSpaces, textStart)\n\n      markEnd = start + startSpaces + group.length\n\n      const attrs = options.getAttr?.(match)\n\n      tr.addMark(start, markEnd, markType.create(attrs))\n      tr.setStoredMarks(initialStoredMarks)\n\n      options.beforeDispatch?.({ match, start, end, tr })\n    }\n\n    return tr\n  })\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { InputRule } from '../../inputrules'\nimport type { NodeType } from '../../model'\nimport type { Captured, Options } from './common'\n\n/// Create an input rule for a node.\nexport function nodeRule(regexp: RegExp, nodeType: NodeType, options: Options = {}): InputRule {\n  return new InputRule(regexp, (state, match, start, end) => {\n    const { tr } = state\n    let group: string | undefined = match[1]\n    let fullMatch = match[0]\n\n    const captured: Captured = {\n      group,\n      fullMatch,\n      start,\n      end,\n    }\n\n    const result = options.updateCaptured?.(captured)\n    Object.assign(captured, result);\n\n    ({ group, fullMatch, start, end } = captured)\n\n    if (fullMatch === null)\n      return null\n\n    if (!group || group.trim() === '')\n      return null\n\n    const attrs = options.getAttr?.(match)\n    const node = nodeType.createAndFill(attrs)\n\n    if (node) {\n      tr.replaceRangeWith(nodeType.isBlock ? tr.doc.resolve(start).before() : start, end, node)\n      options.beforeDispatch?.({ match: [fullMatch, group ?? ''], start, end, tr })\n    }\n\n    return tr\n  })\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { expectDomTypeError, missingRootElement } from '@milkdown/exception'\n\nimport type { EditorView } from '../../view'\n\ntype Point = [top: number, left: number]\n\nexport function calculateNodePosition(view: EditorView, target: HTMLElement, handler: (selectedRect: DOMRect, targetRect: DOMRect, parentRect: DOMRect) => Point) {\n  const state = view.state\n  const { from } = state.selection\n\n  const { node } = view.domAtPos(from)\n  const element = node instanceof Text ? node.parentElement : node\n  if (!(element instanceof HTMLElement))\n    throw expectDomTypeError(element)\n\n  const selectedNodeRect = element.getBoundingClientRect()\n  const targetNodeRect = target.getBoundingClientRect()\n  const parent = target.parentElement\n  if (!parent)\n    throw expectDomTypeError(parent)\n\n  const parentNodeRect = parent.getBoundingClientRect()\n\n  const [top, left] = handler(selectedNodeRect, targetNodeRect, parentNodeRect)\n\n  target.style.top = `${top}px`\n  target.style.left = `${left}px`\n}\n\ninterface Rect {\n  left: number\n  right: number\n  top: number\n  bottom: number\n}\n\nexport function calculateTextPosition(view: EditorView, target: HTMLElement, handler: (start: Rect, end: Rect, targetRect: DOMRect, parentRect: DOMRect) => Point) {\n  const state = view.state\n  const { from, to } = state.selection\n  const start = view.coordsAtPos(from)\n  const end = view.coordsAtPos(to)\n\n  const targetNodeRect = target.getBoundingClientRect()\n  const parent = target.parentElement\n  if (!parent)\n    throw missingRootElement()\n\n  const parentNodeRect = parent.getBoundingClientRect()\n\n  const [top, left] = handler(start, end, targetNodeRect, parentNodeRect)\n\n  target.style.top = `${top}px`\n  target.style.left = `${left}px`\n}\n\nfunction minMax(value = 0, min = 0, max = 0): number {\n  return Math.min(Math.max(value, min), max)\n}\n\nexport function posToDOMRect(view: EditorView, from: number, to: number): DOMRect {\n  const minPos = 0\n  const maxPos = view.state.doc.content.size\n  const resolvedFrom = minMax(from, minPos, maxPos)\n  const resolvedEnd = minMax(to, minPos, maxPos)\n  const start = view.coordsAtPos(resolvedFrom)\n  const end = view.coordsAtPos(resolvedEnd, -1)\n  const top = Math.min(start.top, end.top)\n  const bottom = Math.max(start.bottom, end.bottom)\n  const left = Math.min(start.left, end.left)\n  const right = Math.max(start.right, end.right)\n  const width = right - left\n  const height = bottom - top\n  const x = left\n  const y = top\n  const data = {\n    top,\n    bottom,\n    left,\n    right,\n    width,\n    height,\n    x,\n    y,\n  }\n\n  return {\n    ...data,\n    toJSON: () => data,\n  }\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { NodeType, Node as ProseNode } from '../../model'\nimport type { Transaction } from '../../state'\n\nexport function cloneTr(tr: Transaction): Transaction {\n  return Object.assign(Object.create(tr), tr).setTime(Date.now())\n}\n\nexport function equalNodeType(nodeType: NodeType | NodeType[], node: ProseNode) {\n  return (Array.isArray(nodeType) && nodeType.includes(node.type)) || node.type === nodeType\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { MarkType, Node as ProseNode } from '../../model'\nimport type { Predicate } from './types'\n\nexport interface NodeWithPos { pos: number, node: ProseNode }\n\nexport function flatten(node: ProseNode, descend = true): NodeWithPos[] {\n  const result: NodeWithPos[] = []\n  node.descendants((child, pos) => {\n    result.push({ node: child, pos })\n    if (!descend)\n      return false\n\n    return undefined\n  })\n  return result\n}\n\nexport function findChildren(predicate: Predicate) {\n  return (node: ProseNode, descend?: boolean): NodeWithPos[] =>\n    flatten(node, descend).filter(child => predicate(child.node))\n}\n\nexport function findChildrenByMark(node: ProseNode, markType: MarkType, descend?: boolean): NodeWithPos[] {\n  return findChildren(child => Boolean(markType.isInSet(child.marks)))(node, descend)\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { getAtomFromSchemaFail } from '@milkdown/exception'\n\nimport type { MarkType, NodeType, Schema } from '../../model'\n\nexport function getNodeFromSchema(type: string, schema: Schema): NodeType {\n  const target = schema.nodes[type]\n\n  if (!target)\n    throw getAtomFromSchemaFail('node', type)\n\n  return target\n}\n\nexport function getMarkFromSchema(type: string, schema: Schema): MarkType {\n  const target = schema.marks[type]\n\n  if (!target)\n    throw getAtomFromSchemaFail('mark', type)\n\n  return target\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { NodeType, Node as ProseNode, ResolvedPos } from '../../model'\nimport type { Selection } from '../../state'\nimport { NodeSelection } from '../../state'\nimport { equalNodeType } from './helper'\nimport type { Predicate } from './types'\n\nexport interface ContentNodeWithPos { pos: number, start: number, depth: number, node: ProseNode }\n\nexport function findParentNodeClosestToPos(predicate: Predicate) {\n  return ($pos: ResolvedPos): ContentNodeWithPos | undefined => {\n    for (let i = $pos.depth; i > 0; i--) {\n      const node = $pos.node(i)\n      if (predicate(node)) {\n        return {\n          pos: i > 0 ? $pos.before(i) : 0,\n          start: $pos.start(i),\n          depth: i,\n          node,\n        }\n      }\n    }\n\n    return undefined\n  }\n}\n\nexport function findParentNode(predicate: Predicate) {\n  return (selection: Selection): ContentNodeWithPos | undefined => {\n    return findParentNodeClosestToPos(predicate)(selection.$from)\n  }\n}\n\nexport function findSelectedNodeOfType(selection: Selection, nodeType: NodeType): ContentNodeWithPos | undefined {\n  if (!(selection instanceof NodeSelection))\n    return\n\n  const { node, $from } = selection\n  if (equalNodeType(nodeType, node))\n    return { node, pos: $from.pos, start: $from.start($from.depth), depth: $from.depth }\n\n  return undefined\n}\n"],"names":[],"mappings":";;;;AAOA,MAAM,GAAM,GAAA,OAAO,SAAa,IAAA,WAAA,GAAc,SAAY,GAAA,IAAA,CAAA;AAC1D,MAAM,GAAM,GAAA,OAAO,QAAY,IAAA,WAAA,GAAc,QAAW,GAAA,IAAA,CAAA;AACxD,MAAM,KAAA,GAAS,GAAO,IAAA,GAAA,CAAI,SAAc,IAAA,EAAA,CAAA;AAExC,MAAM,OAAA,GAAU,aAAc,CAAA,IAAA,CAAK,KAAK,CAAA,CAAA;AACxC,MAAM,SAAA,GAAY,SAAU,CAAA,IAAA,CAAK,KAAK,CAAA,CAAA;AACtC,MAAM,OAAA,GAAU,uCAAwC,CAAA,IAAA,CAAK,KAAK,CAAA,CAAA;AAE3D,MAAM,EAAK,GAAA,CAAC,EAAE,SAAA,IAAa,OAAW,IAAA,OAAA,CAAA,CAAA;AACtC,MAAM,UAAa,GAAA,SAAA,GACrB,QAAyD,CAAA,YAAA,GAC1D,OACE,GAAA,CAAC,OAAQ,CAAA,CAAC,CACV,GAAA,OAAA,GACE,CAAC,OAAA,CAAQ,CAAC,CACV,GAAA,CAAA,CAAA;AACD,MAAM,KAAQ,GAAA,CAAC,EAAM,IAAA,eAAA,CAAgB,KAAK,KAAK,CAAA,CAAA;AACzC,MAAA,aAAA,GAAgB,KAAS,IAAA,CAAA,CAAE,gBAAiB,CAAA,IAAA,CAAK,KAAK,CAAA,IAAK,CAAC,CAAA,EAAG,CAAC,CAAA,EAAG,CAAC,CAAA,CAAA;AAEjF,MAAM,OAAU,GAAA,CAAC,EAAM,IAAA,eAAA,CAAgB,KAAK,KAAK,CAAA,CAAA;AACpC,MAAA,MAAA,GAAS,CAAC,CAAC,OAAA,CAAA;AACjB,MAAM,cAAiB,GAAA,OAAA,GAAU,CAAC,OAAA,CAAQ,CAAC,CAAK,GAAA,CAAA,CAAA;AAC1C,MAAA,MAAA,GAAS,CAAC,EAAM,IAAA,CAAC,CAAC,GAAO,IAAA,gBAAA,CAAiB,IAAK,CAAA,GAAA,CAAI,MAAM,CAAA,CAAA;AAEzD,MAAA,GAAA,GAAM,MAAW,KAAA,aAAA,CAAc,IAAK,CAAA,KAAK,KAAM,CAAC,CAAC,GAAO,IAAA,GAAA,CAAI,cAAiB,GAAA,CAAA,CAAA,CAAA;AACnF,MAAM,MAAM,GAAQ,KAAA,GAAA,GAAM,MAAM,IAAK,CAAA,GAAA,CAAI,QAAQ,CAAI,GAAA,KAAA,CAAA,CAAA;AAC/C,MAAA,OAAA,GAAU,YAAa,CAAA,IAAA,CAAK,KAAK,CAAA,CAAA;AACvC,MAAM,SAAS,CAAC,CAAC,GAAO,IAAA,qBAAA,IAAyB,IAAI,eAAgB,CAAA,KAAA,CAAA;AACrE,MAAM,cAAiB,GAAA,MAAA,GAAS,CAAE,CAAA,sBAAA,CAAuB,IAAK,CAAA,SAAA,CAAU,SAAS,CAAA,IAAK,CAAC,CAAA,EAAG,CAAC,CAAA,EAAG,CAAC,CAAI,GAAA,CAAA;;;;;;;;;;;;;;;;;;AC5B1G,SAAS,IAAI,IAAkB,EAAA,IAAA,EAAc,EAAY,EAAA,IAAA,EAAc,OAAoB,MAAgB,EAAA;AACzG,EAAA,IAAI,IAAK,CAAA,SAAA;AACP,IAAO,OAAA,KAAA,CAAA;AACT,EAAA,MAAM,QAAQ,IAAK,CAAA,KAAA,CAAA;AACnB,EAAA,MAAM,KAAQ,GAAA,KAAA,CAAM,GAAI,CAAA,OAAA,CAAQ,IAAI,CAAA,CAAA;AACpC,EAAI,IAAA,KAAA,CAAM,MAAO,CAAA,IAAA,CAAK,IAAK,CAAA,IAAA;AACzB,IAAO,OAAA,KAAA,CAAA;AACT,EAAA,MAAM,UACE,GAAA,KAAA,CAAM,MAAO,CAAA,WAAA,CAAY,KAAK,GAAI,CAAA,CAAA,EAAG,KAAM,CAAA,YAAA,GAAe,GAAG,CAAG,EAAA,KAAA,CAAM,YAAc,EAAA,KAAA,CAAA,EAAW,QAAQ,CAAI,GAAA,IAAA,CAAA;AACnH,EAAA,KAAA,IAAS,CAAI,GAAA,CAAA,EAAG,CAAI,GAAA,KAAA,CAAM,QAAQ,CAAK,EAAA,EAAA;AACrC,IAAA,MAAM,QAAS,KAAM,CAAA,CAAC,CAAwB,CAAA,KAAA,CAAM,KAAK,UAAU,CAAA,CAAA;AACnE,IAAA,MAAM,KACI,KACC,IAAA,KAAA,CAAM,CAAC,CAER,IAAA,KAAA,CAAM,CAAC,CACP,CAAA,OAAA,CAAQ,KAAO,EAAA,KAAA,EAAO,QAAQ,KAAM,CAAA,CAAC,EAAE,MAAS,GAAA,IAAA,CAAK,SAAS,EAAE,CAAA,CAAA;AAC1E,IAAA,IAAI,CAAC,EAAA;AACH,MAAA,SAAA;AACF,IAAK,IAAA,CAAA,QAAA,CAAS,EAAG,CAAA,OAAA,CAAQ,MAAQ,EAAA,EAAE,SAAW,EAAA,EAAA,EAAI,IAAM,EAAA,EAAA,EAAI,IAAK,EAAC,CAAC,CAAA,CAAA;AACnE,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AACA,EAAO,OAAA,KAAA,CAAA;AACT,CAAA;AAEa,MAAA,mBAAA,GAAsB,IAAI,SAAA,CAAU,4BAA4B,EAAA;AAC7D,SAAA,gBAAA,CAAiB,EAAE,KAAA,EAAyC,EAAA;AAC1E,EAAM,MAAA,MAAA,GAAiB,IAAI,MAAO,CAAA;AAAA,IAChC,GAAK,EAAA,mBAAA;AAAA,IACL,YAAc,EAAA,IAAA;AAAA,IAEd,KAAO,EAAA;AAAA,MACL,IAAO,GAAA;AACL,QAAO,OAAA,IAAA,CAAA;AAAA,OACT;AAAA,MACA,KAAA,CAA2B,IAAI,IAAM,EAAA;AACnC,QAAM,MAAA,MAAA,GAAS,EAAG,CAAA,OAAA,CAAQ,IAAI,CAAA,CAAA;AAC9B,QAAI,IAAA,MAAA;AACF,UAAO,OAAA,MAAA,CAAA;AACT,QAAA,OAAQ,EAAG,CAAA,YAAA,IAAgB,EAAG,CAAA,UAAA,GAAc,IAAO,GAAA,IAAA,CAAA;AAAA,OACrD;AAAA,KACF;AAAA,IACA,KAAO,EAAA;AAAA,MACL,eAAgB,CAAA,IAAA,EAAM,IAAM,EAAA,EAAA,EAAI,IAAM,EAAA;AACpC,QAAA,OAAO,IAAI,IAAM,EAAA,IAAA,EAAM,EAAI,EAAA,IAAA,EAAM,OAAO,MAAM,CAAA,CAAA;AAAA,OAChD;AAAA,MACA,eAAiB,EAAA;AAAA,QACf,cAAA,EAAgB,CAAC,IAAS,KAAA;AACxB,UAAA,UAAA,CAAW,MAAM;AACf,YAAA,MAAM,EAAE,OAAA,EAAY,GAAA,IAAA,CAAK,KAAM,CAAA,SAAA,CAAA;AAC/B,YAAI,IAAA,OAAA;AACF,cAAA,GAAA,CAAI,MAAM,OAAQ,CAAA,GAAA,EAAK,QAAQ,GAAK,EAAA,EAAA,EAAI,OAAO,MAAM,CAAA,CAAA;AAAA,WACxD,CAAA,CAAA;AACD,UAAO,OAAA,KAAA,CAAA;AAAA,SACT;AAAA,OACF;AAAA,MACA,aAAA,CAAc,MAAM,KAAO,EAAA;AACzB,QAAA,IAAI,MAAM,GAAQ,KAAA,OAAA;AAChB,UAAO,OAAA,KAAA,CAAA;AACT,QAAA,MAAM,EAAE,OAAA,EAAY,GAAA,IAAA,CAAK,KAAM,CAAA,SAAA,CAAA;AAC/B,QAAI,IAAA,OAAA;AACF,UAAO,OAAA,GAAA,CAAI,MAAM,OAAQ,CAAA,GAAA,EAAK,QAAQ,GAAK,EAAA,IAAA,EAAM,OAAO,MAAM,CAAA,CAAA;AAChE,QAAO,OAAA,KAAA,CAAA;AAAA,OACT;AAAA,KACF;AAAA,GACD,CAAA,CAAA;AACD,EAAO,OAAA,MAAA,CAAA;AACT;;ACpEO,SAAS,QAAS,CAAA,MAAA,EAAgB,QAAoB,EAAA,OAAA,GAAmB,EAAe,EAAA;AAC7F,EAAA,OAAO,IAAI,SAAU,CAAA,MAAA,EAAQ,CAAC,KAAO,EAAA,KAAA,EAAO,OAAO,GAAQ,KAAA;AAP7D,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA;AAQI,IAAM,MAAA,EAAE,IAAO,GAAA,KAAA,CAAA;AACf,IAAA,MAAM,cAAc,KAAM,CAAA,MAAA,CAAA;AAE1B,IAAI,IAAA,KAAA,GAAQ,KAAM,CAAA,WAAA,GAAc,CAAC,CAAA,CAAA;AACjC,IAAI,IAAA,SAAA,GAAY,MAAM,CAAC,CAAA,CAAA;AACvB,IAAA,IAAI,qBAAsC,EAAC,CAAA;AAE3C,IAAA,IAAI,OAAU,GAAA,GAAA,CAAA;AAEd,IAAA,MAAM,QAAqB,GAAA;AAAA,MACzB,KAAA;AAAA,MACA,SAAA;AAAA,MACA,KAAA;AAAA,MACA,GAAA;AAAA,KACF,CAAA;AAEA,IAAM,MAAA,MAAA,GAAA,CAAS,EAAQ,GAAA,OAAA,CAAA,cAAA,KAAR,IAAyB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,OAAA,EAAA,QAAA,CAAA,CAAA;AACxC,IAAO,MAAA,CAAA,MAAA,CAAO,UAAU,MAAM,CAAA,CAAA;AAE9B,IAAA,CAAC,EAAE,KAAA,EAAO,SAAW,EAAA,KAAA,EAAO,KAAQ,GAAA,QAAA,EAAA;AAEpC,IAAA,IAAI,SAAc,KAAA,IAAA;AAChB,MAAO,OAAA,IAAA,CAAA;AAET,IAAA,IAAA,CAAI,+BAAO,IAAW,EAAA,MAAA,EAAA;AACpB,MAAO,OAAA,IAAA,CAAA;AAET,IAAA,IAAI,KAAO,EAAA;AACT,MAAM,MAAA,WAAA,GAAc,SAAU,CAAA,MAAA,CAAO,IAAI,CAAA,CAAA;AACzC,MAAA,MAAM,SAAY,GAAA,KAAA,GAAQ,SAAU,CAAA,OAAA,CAAQ,KAAK,CAAA,CAAA;AACjD,MAAM,MAAA,OAAA,GAAU,YAAY,KAAM,CAAA,MAAA,CAAA;AAElC,MAAqB,kBAAA,GAAA,CAAA,EAAA,GAAA,EAAA,CAAG,WAAH,KAAA,IAAA,GAAA,EAAA,GAAkB,EAAC,CAAA;AAExC,MAAA,IAAI,OAAU,GAAA,GAAA;AACZ,QAAG,EAAA,CAAA,MAAA,CAAO,SAAS,GAAG,CAAA,CAAA;AAExB,MAAA,IAAI,SAAY,GAAA,KAAA;AACd,QAAG,EAAA,CAAA,MAAA,CAAO,KAAQ,GAAA,WAAA,EAAa,SAAS,CAAA,CAAA;AAE1C,MAAU,OAAA,GAAA,KAAA,GAAQ,cAAc,KAAM,CAAA,MAAA,CAAA;AAEtC,MAAM,MAAA,KAAA,GAAA,CAAQ,EAAQ,GAAA,OAAA,CAAA,OAAA,KAAR,IAAkB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,OAAA,EAAA,KAAA,CAAA,CAAA;AAEhC,MAAA,EAAA,CAAG,QAAQ,KAAO,EAAA,OAAA,EAAS,QAAS,CAAA,MAAA,CAAO,KAAK,CAAC,CAAA,CAAA;AACjD,MAAA,EAAA,CAAG,eAAe,kBAAkB,CAAA,CAAA;AAEpC,MAAA,CAAA,EAAA,GAAA,OAAA,CAAQ,mBAAR,IAAyB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,OAAA,EAAA,EAAE,KAAO,EAAA,KAAA,EAAO,KAAK,EAAG,EAAA,CAAA,CAAA;AAAA,KACnD;AAEA,IAAO,OAAA,EAAA,CAAA;AAAA,GACR,CAAA,CAAA;AACH;;ACtDO,SAAS,QAAS,CAAA,MAAA,EAAgB,QAAoB,EAAA,OAAA,GAAmB,EAAe,EAAA;AAC7F,EAAA,OAAO,IAAI,SAAU,CAAA,MAAA,EAAQ,CAAC,KAAO,EAAA,KAAA,EAAO,OAAO,GAAQ,KAAA;AAP7D,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA;AAQI,IAAM,MAAA,EAAE,IAAO,GAAA,KAAA,CAAA;AACf,IAAI,IAAA,KAAA,GAA4B,MAAM,CAAC,CAAA,CAAA;AACvC,IAAI,IAAA,SAAA,GAAY,MAAM,CAAC,CAAA,CAAA;AAEvB,IAAA,MAAM,QAAqB,GAAA;AAAA,MACzB,KAAA;AAAA,MACA,SAAA;AAAA,MACA,KAAA;AAAA,MACA,GAAA;AAAA,KACF,CAAA;AAEA,IAAM,MAAA,MAAA,GAAA,CAAS,EAAQ,GAAA,OAAA,CAAA,cAAA,KAAR,IAAyB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,OAAA,EAAA,QAAA,CAAA,CAAA;AACxC,IAAO,MAAA,CAAA,MAAA,CAAO,UAAU,MAAM,CAAA,CAAA;AAE9B,IAAA,CAAC,EAAE,KAAA,EAAO,SAAW,EAAA,KAAA,EAAO,KAAQ,GAAA,QAAA,EAAA;AAEpC,IAAA,IAAI,SAAc,KAAA,IAAA;AAChB,MAAO,OAAA,IAAA,CAAA;AAET,IAAA,IAAI,CAAC,KAAA,IAAS,KAAM,CAAA,IAAA,EAAW,KAAA,EAAA;AAC7B,MAAO,OAAA,IAAA,CAAA;AAET,IAAM,MAAA,KAAA,GAAA,CAAQ,EAAQ,GAAA,OAAA,CAAA,OAAA,KAAR,IAAkB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,OAAA,EAAA,KAAA,CAAA,CAAA;AAChC,IAAM,MAAA,IAAA,GAAO,QAAS,CAAA,aAAA,CAAc,KAAK,CAAA,CAAA;AAEzC,IAAA,IAAI,IAAM,EAAA;AACR,MAAA,EAAA,CAAG,gBAAiB,CAAA,QAAA,CAAS,OAAU,GAAA,EAAA,CAAG,GAAI,CAAA,OAAA,CAAQ,KAAK,CAAA,CAAE,MAAO,EAAA,GAAI,KAAO,EAAA,GAAA,EAAK,IAAI,CAAA,CAAA;AACxF,MAAQ,CAAA,EAAA,GAAA,OAAA,CAAA,cAAA,KAAR,IAAyB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,OAAA,EAAA,EAAE,KAAO,EAAA,CAAC,SAAW,EAAA,KAAA,IAAA,IAAA,GAAA,KAAA,GAAS,EAAE,CAAA,EAAG,KAAO,EAAA,GAAA,EAAK,EAAG,EAAA,CAAA,CAAA;AAAA,KAC7E;AAEA,IAAO,OAAA,EAAA,CAAA;AAAA,GACR,CAAA,CAAA;AACH;;;;;;;;;;;;;;;;;;;;;ACjCgB,SAAA,qBAAA,CAAsB,IAAkB,EAAA,MAAA,EAAqB,OAAqF,EAAA;AAChK,EAAA,MAAM,QAAQ,IAAK,CAAA,KAAA,CAAA;AACnB,EAAM,MAAA,EAAE,IAAK,EAAA,GAAI,KAAM,CAAA,SAAA,CAAA;AAEvB,EAAA,MAAM,EAAE,IAAA,EAAS,GAAA,IAAA,CAAK,SAAS,IAAI,CAAA,CAAA;AACnC,EAAA,MAAM,OAAU,GAAA,IAAA,YAAgB,IAAO,GAAA,IAAA,CAAK,aAAgB,GAAA,IAAA,CAAA;AAC5D,EAAA,IAAI,EAAE,OAAmB,YAAA,WAAA,CAAA;AACvB,IAAA,MAAM,mBAAmB,OAAO,CAAA,CAAA;AAElC,EAAM,MAAA,gBAAA,GAAmB,QAAQ,qBAAsB,EAAA,CAAA;AACvD,EAAM,MAAA,cAAA,GAAiB,OAAO,qBAAsB,EAAA,CAAA;AACpD,EAAA,MAAM,SAAS,MAAO,CAAA,aAAA,CAAA;AACtB,EAAA,IAAI,CAAC,MAAA;AACH,IAAA,MAAM,mBAAmB,MAAM,CAAA,CAAA;AAEjC,EAAM,MAAA,cAAA,GAAiB,OAAO,qBAAsB,EAAA,CAAA;AAEpD,EAAA,MAAM,CAAC,GAAK,EAAA,IAAI,IAAI,OAAQ,CAAA,gBAAA,EAAkB,gBAAgB,cAAc,CAAA,CAAA;AAE5E,EAAO,MAAA,CAAA,KAAA,CAAM,GAAM,GAAA,CAAA,EAAG,GAAG,CAAA,EAAA,CAAA,CAAA;AACzB,EAAO,MAAA,CAAA,KAAA,CAAM,IAAO,GAAA,CAAA,EAAG,IAAI,CAAA,EAAA,CAAA,CAAA;AAC7B,CAAA;AASgB,SAAA,qBAAA,CAAsB,IAAkB,EAAA,MAAA,EAAqB,OAAsF,EAAA;AACjK,EAAA,MAAM,QAAQ,IAAK,CAAA,KAAA,CAAA;AACnB,EAAA,MAAM,EAAE,IAAA,EAAM,EAAG,EAAA,GAAI,KAAM,CAAA,SAAA,CAAA;AAC3B,EAAM,MAAA,KAAA,GAAQ,IAAK,CAAA,WAAA,CAAY,IAAI,CAAA,CAAA;AACnC,EAAM,MAAA,GAAA,GAAM,IAAK,CAAA,WAAA,CAAY,EAAE,CAAA,CAAA;AAE/B,EAAM,MAAA,cAAA,GAAiB,OAAO,qBAAsB,EAAA,CAAA;AACpD,EAAA,MAAM,SAAS,MAAO,CAAA,aAAA,CAAA;AACtB,EAAA,IAAI,CAAC,MAAA;AACH,IAAA,MAAM,kBAAmB,EAAA,CAAA;AAE3B,EAAM,MAAA,cAAA,GAAiB,OAAO,qBAAsB,EAAA,CAAA;AAEpD,EAAM,MAAA,CAAC,KAAK,IAAI,CAAA,GAAI,QAAQ,KAAO,EAAA,GAAA,EAAK,gBAAgB,cAAc,CAAA,CAAA;AAEtE,EAAO,MAAA,CAAA,KAAA,CAAM,GAAM,GAAA,CAAA,EAAG,GAAG,CAAA,EAAA,CAAA,CAAA;AACzB,EAAO,MAAA,CAAA,KAAA,CAAM,IAAO,GAAA,CAAA,EAAG,IAAI,CAAA,EAAA,CAAA,CAAA;AAC7B,CAAA;AAEA,SAAS,OAAO,KAAQ,GAAA,CAAA,EAAG,GAAM,GAAA,CAAA,EAAG,MAAM,CAAW,EAAA;AACnD,EAAA,OAAO,KAAK,GAAI,CAAA,IAAA,CAAK,IAAI,KAAO,EAAA,GAAG,GAAG,GAAG,CAAA,CAAA;AAC3C,CAAA;AAEgB,SAAA,YAAA,CAAa,IAAkB,EAAA,IAAA,EAAc,EAAqB,EAAA;AAChF,EAAA,MAAM,MAAS,GAAA,CAAA,CAAA;AACf,EAAA,MAAM,MAAS,GAAA,IAAA,CAAK,KAAM,CAAA,GAAA,CAAI,OAAQ,CAAA,IAAA,CAAA;AACtC,EAAA,MAAM,YAAe,GAAA,MAAA,CAAO,IAAM,EAAA,MAAA,EAAQ,MAAM,CAAA,CAAA;AAChD,EAAA,MAAM,WAAc,GAAA,MAAA,CAAO,EAAI,EAAA,MAAA,EAAQ,MAAM,CAAA,CAAA;AAC7C,EAAM,MAAA,KAAA,GAAQ,IAAK,CAAA,WAAA,CAAY,YAAY,CAAA,CAAA;AAC3C,EAAA,MAAM,GAAM,GAAA,IAAA,CAAK,WAAY,CAAA,WAAA,EAAa,CAAE,CAAA,CAAA,CAAA;AAC5C,EAAA,MAAM,MAAM,IAAK,CAAA,GAAA,CAAI,KAAM,CAAA,GAAA,EAAK,IAAI,GAAG,CAAA,CAAA;AACvC,EAAA,MAAM,SAAS,IAAK,CAAA,GAAA,CAAI,KAAM,CAAA,MAAA,EAAQ,IAAI,MAAM,CAAA,CAAA;AAChD,EAAA,MAAM,OAAO,IAAK,CAAA,GAAA,CAAI,KAAM,CAAA,IAAA,EAAM,IAAI,IAAI,CAAA,CAAA;AAC1C,EAAA,MAAM,QAAQ,IAAK,CAAA,GAAA,CAAI,KAAM,CAAA,KAAA,EAAO,IAAI,KAAK,CAAA,CAAA;AAC7C,EAAA,MAAM,QAAQ,KAAQ,GAAA,IAAA,CAAA;AACtB,EAAA,MAAM,SAAS,MAAS,GAAA,GAAA,CAAA;AACxB,EAAA,MAAM,CAAI,GAAA,IAAA,CAAA;AACV,EAAA,MAAM,CAAI,GAAA,GAAA,CAAA;AACV,EAAA,MAAM,IAAO,GAAA;AAAA,IACX,GAAA;AAAA,IACA,MAAA;AAAA,IACA,IAAA;AAAA,IACA,KAAA;AAAA,IACA,KAAA;AAAA,IACA,MAAA;AAAA,IACA,CAAA;AAAA,IACA,CAAA;AAAA,GACF,CAAA;AAEA,EAAA,OAAO,iCACF,IADE,CAAA,EAAA;AAAA,IAEL,QAAQ,MAAM,IAAA;AAAA,GAChB,CAAA,CAAA;AACF;;ACtFO,SAAS,QAAQ,EAA8B,EAAA;AACpD,EAAO,OAAA,MAAA,CAAO,MAAO,CAAA,MAAA,CAAO,MAAO,CAAA,EAAE,CAAG,EAAA,EAAE,CAAE,CAAA,OAAA,CAAQ,IAAK,CAAA,GAAA,EAAK,CAAA,CAAA;AAChE,CAAA;AAEgB,SAAA,aAAA,CAAc,UAAiC,IAAiB,EAAA;AAC9E,EAAQ,OAAA,KAAA,CAAM,OAAQ,CAAA,QAAQ,CAAK,IAAA,QAAA,CAAS,SAAS,IAAK,CAAA,IAAI,CAAM,IAAA,IAAA,CAAK,IAAS,KAAA,QAAA,CAAA;AACpF;;ACJgB,SAAA,OAAA,CAAQ,IAAiB,EAAA,OAAA,GAAU,IAAqB,EAAA;AACtE,EAAA,MAAM,SAAwB,EAAC,CAAA;AAC/B,EAAK,IAAA,CAAA,WAAA,CAAY,CAAC,KAAA,EAAO,GAAQ,KAAA;AAC/B,IAAA,MAAA,CAAO,IAAK,CAAA,EAAE,IAAM,EAAA,KAAA,EAAO,KAAK,CAAA,CAAA;AAChC,IAAA,IAAI,CAAC,OAAA;AACH,MAAO,OAAA,KAAA,CAAA;AAET,IAAO,OAAA,KAAA,CAAA,CAAA;AAAA,GACR,CAAA,CAAA;AACD,EAAO,OAAA,MAAA,CAAA;AACT,CAAA;AAEO,SAAS,aAAa,SAAsB,EAAA;AACjD,EAAA,OAAO,CAAC,IAAA,EAAiB,OACvB,KAAA,OAAA,CAAQ,IAAM,EAAA,OAAO,CAAE,CAAA,MAAA,CAAO,CAAS,KAAA,KAAA,SAAA,CAAU,KAAM,CAAA,IAAI,CAAC,CAAA,CAAA;AAChE,CAAA;AAEgB,SAAA,kBAAA,CAAmB,IAAiB,EAAA,QAAA,EAAoB,OAAkC,EAAA;AACxG,EAAO,OAAA,YAAA,CAAa,CAAS,KAAA,KAAA,OAAA,CAAQ,QAAS,CAAA,OAAA,CAAQ,KAAM,CAAA,KAAK,CAAC,CAAC,CAAE,CAAA,IAAA,EAAM,OAAO,CAAA,CAAA;AACpF;;ACpBgB,SAAA,iBAAA,CAAkB,MAAc,MAA0B,EAAA;AACxE,EAAM,MAAA,MAAA,GAAS,MAAO,CAAA,KAAA,CAAM,IAAI,CAAA,CAAA;AAEhC,EAAA,IAAI,CAAC,MAAA;AACH,IAAM,MAAA,qBAAA,CAAsB,QAAQ,IAAI,CAAA,CAAA;AAE1C,EAAO,OAAA,MAAA,CAAA;AACT,CAAA;AAEgB,SAAA,iBAAA,CAAkB,MAAc,MAA0B,EAAA;AACxE,EAAM,MAAA,MAAA,GAAS,MAAO,CAAA,KAAA,CAAM,IAAI,CAAA,CAAA;AAEhC,EAAA,IAAI,CAAC,MAAA;AACH,IAAM,MAAA,qBAAA,CAAsB,QAAQ,IAAI,CAAA,CAAA;AAE1C,EAAO,OAAA,MAAA,CAAA;AACT;;ACZO,SAAS,2BAA2B,SAAsB,EAAA;AAC/D,EAAA,OAAO,CAAC,IAAsD,KAAA;AAC5D,IAAA,KAAA,IAAS,CAAI,GAAA,IAAA,CAAK,KAAO,EAAA,CAAA,GAAI,GAAG,CAAK,EAAA,EAAA;AACnC,MAAM,MAAA,IAAA,GAAO,IAAK,CAAA,IAAA,CAAK,CAAC,CAAA,CAAA;AACxB,MAAI,IAAA,SAAA,CAAU,IAAI,CAAG,EAAA;AACnB,QAAO,OAAA;AAAA,UACL,KAAK,CAAI,GAAA,CAAA,GAAI,IAAK,CAAA,MAAA,CAAO,CAAC,CAAI,GAAA,CAAA;AAAA,UAC9B,KAAA,EAAO,IAAK,CAAA,KAAA,CAAM,CAAC,CAAA;AAAA,UACnB,KAAO,EAAA,CAAA;AAAA,UACP,IAAA;AAAA,SACF,CAAA;AAAA,OACF;AAAA,KACF;AAEA,IAAO,OAAA,KAAA,CAAA,CAAA;AAAA,GACT,CAAA;AACF,CAAA;AAEO,SAAS,eAAe,SAAsB,EAAA;AACnD,EAAA,OAAO,CAAC,SAAyD,KAAA;AAC/D,IAAA,OAAO,0BAA2B,CAAA,SAAS,CAAE,CAAA,SAAA,CAAU,KAAK,CAAA,CAAA;AAAA,GAC9D,CAAA;AACF,CAAA;AAEgB,SAAA,sBAAA,CAAuB,WAAsB,QAAoD,EAAA;AAC/G,EAAA,IAAI,EAAE,SAAqB,YAAA,aAAA,CAAA;AACzB,IAAA,OAAA;AAEF,EAAM,MAAA,EAAE,IAAM,EAAA,KAAA,EAAU,GAAA,SAAA,CAAA;AACxB,EAAI,IAAA,aAAA,CAAc,UAAU,IAAI,CAAA;AAC9B,IAAA,OAAO,EAAE,IAAA,EAAM,GAAK,EAAA,KAAA,CAAM,GAAK,EAAA,KAAA,EAAO,KAAM,CAAA,KAAA,CAAM,KAAM,CAAA,KAAK,CAAG,EAAA,KAAA,EAAO,MAAM,KAAM,EAAA,CAAA;AAErF,EAAO,OAAA,KAAA,CAAA,CAAA;AACT;;;;"}